{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/andres/Projects/podcasts-nextjs/pages/index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport 'isomorphic-fetch';\nimport ChannelGrid from '../components/ChannelGrid';\n\nvar Index = function Index(props) {\n  var channels = props.channels;\n  return __jsx(Layout, {\n    title: \"Podcasts\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, __jsx(ChannelGrid, {\n    channels: channels,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }));\n};\n\nIndex.getInitialProps = function _callee() {\n  var req, _await$req$json, channels;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://api.audioboom.com/channels/recommended'));\n\n        case 2:\n          req = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(req.json());\n\n        case 5:\n          _await$req$json = _context.sent;\n          channels = _await$req$json.body;\n          return _context.abrupt(\"return\", {\n            channels: channels\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Index;","map":{"version":3,"sources":["/home/andres/Projects/podcasts-nextjs/pages/index.js"],"names":["ChannelGrid","Index","props","channels","getInitialProps","fetch","req","json","body"],"mappings":";;;;;;;AAAA,OAAO,kBAAP;AACA,OAAOA,WAAP,MAAwB,2BAAxB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AAAA,MACfC,QADe,GACFD,KADE,CACfC,QADe;AAGvB,SACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAa,IAAA,QAAQ,EAAEA,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CARD;;AAUAF,KAAK,CAACG,eAAN,GAAwB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACNC,KAAK,CAAC,gDAAD,CADC;;AAAA;AAClBC,UAAAA,GADkB;AAAA;AAAA,2CAESA,GAAG,CAACC,IAAJ,EAFT;;AAAA;AAAA;AAEVJ,UAAAA,QAFU,mBAEhBK,IAFgB;AAAA,2CAGf;AAAEL,YAAAA,QAAQ,EAARA;AAAF,WAHe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAMA,eAAeF,KAAf","sourcesContent":["import 'isomorphic-fetch';\nimport ChannelGrid from '../components/ChannelGrid';\n\nconst Index = (props) => {\n  const { channels } = props;\n\n  return (\n    <Layout title='Podcasts'>\n      <ChannelGrid channels={channels} />\n    </Layout>\n  );\n};\n\nIndex.getInitialProps = async () => {\n  let req = await fetch('https://api.audioboom.com/channels/recommended');\n  let { body: channels } = await req.json();\n  return { channels };\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}