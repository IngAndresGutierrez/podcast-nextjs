{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/andres/Projects/podcasts-nextjs/pages/podcast.js\";\n\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport 'isomorphic-fetch';\nimport Link from 'next/link';\nimport Layout from '../components/Layout';\n\nPodcast = function Podcast(props) {\n  var clip = props.clip;\n  return __jsx(Layout, {\n    title: clip.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-3141567042\" + \" \" + 'modal',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-3141567042\" + \" \" + 'clip',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, __jsx(\"nav\", {\n    className: \"jsx-3141567042\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }\n  }, __jsx(Link, {\n    href: \"/channel?id=\".concat(clip.channel.id),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    className: \"jsx-3141567042\" + \" \" + 'close',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 15\n    }\n  }, \"< Volver\"))), __jsx(\"picture\", {\n    className: \"jsx-3141567042\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    style: {\n      backgroundImage: \"url(\".concat(clip.urls.image || clip.channel.urls.logo_image.original, \")\")\n    },\n    className: \"jsx-3141567042\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    className: \"jsx-3141567042\" + \" \" + 'player',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, __jsx(\"h3\", {\n    className: \"jsx-3141567042\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, clip.title), __jsx(\"h6\", {\n    className: \"jsx-3141567042\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, clip.channel.title), __jsx(\"audio\", {\n    controls: true,\n    autoPlay: true,\n    className: \"jsx-3141567042\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, __jsx(\"source\", {\n    src: clip.urls.high_mp3,\n    type: \"audio/mpeg\",\n    className: \"jsx-3141567042\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }))))), __jsx(_JSXStyle, {\n    id: \"3141567042\",\n    __self: _this\n  }, \"nav.jsx-3141567042{background:none;}nav.jsx-3141567042 a.jsx-3141567042{display:inline-block;padding:15px;color:white;cursor:pointer;-webkit-text-decoration:none;text-decoration:none;}.clip.jsx-3141567042{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;height:100%;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;background:#8756ca;color:white;}picture.jsx-3141567042{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-flex:1 1;-ms-flex:1 1;flex:1 1;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;width:auto;padding:10%;}picture.jsx-3141567042 div.jsx-3141567042{width:100%;height:100%;background-position:50% 50%;background-size:contain;background-repeat:no-repeat;}.player.jsx-3141567042{padding:30px;background:rgba(0,0,0,0.3);text-align:center;}h3.jsx-3141567042{margin:0;}h6.jsx-3141567042{margin:0;margin-top:1em;}audio.jsx-3141567042{margin-top:2em;width:100%;}.modal.jsx-3141567042{position:fixed;top:0;left:0;right:0;bottom:0;z-index:99999;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2FuZHJlcy9Qcm9qZWN0cy9wb2RjYXN0cy1uZXh0anMvcGFnZXMvcG9kY2FzdC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFxQ2tCLEFBRzJCLEFBR0ssQUFPUixBQU9BLEFBU0YsQUFPRSxBQUtKLEFBR0EsQUFJTSxBQUtBLFNBWGpCLEFBR2lCLEVBZkgsRUFPa0IsRUFZbkIsQUFLTCxDQWxEUixLQUdlLEFBZ0ROLEVBeEJxQixDQWU5QixFQUlBLEVBTVUsTUFoREksRUFpREgsSUFuQlMsS0FvQkosQ0FqREMsS0F1QlMsT0FPMUIsQ0FvQkEsRUFqRHVCLGFBSVQsQUFPTyxDQVlTLFdBbEJOLGlCQW1CeEIsUUF2QkEscURBS3FCLEdBTUksZ0JBTFgsWUFDZCx1RUFLVyx1Q0FDYSw4RUFDWCxXQUNDLFlBQ2QiLCJmaWxlIjoiL2hvbWUvYW5kcmVzL1Byb2plY3RzL3BvZGNhc3RzLW5leHRqcy9wYWdlcy9wb2RjYXN0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICdpc29tb3JwaGljLWZldGNoJztcbmltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluayc7XG5pbXBvcnQgTGF5b3V0IGZyb20gJy4uL2NvbXBvbmVudHMvTGF5b3V0JztcblxuUG9kY2FzdCA9IChwcm9wcykgPT4ge1xuICBjb25zdCB7IGNsaXAgfSA9IHByb3BzO1xuXG4gIHJldHVybiAoXG4gICAgPExheW91dCB0aXRsZT17Y2xpcC50aXRsZX0+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT0nbW9kYWwnPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nY2xpcCc+XG4gICAgICAgICAgPG5hdj5cbiAgICAgICAgICAgIDxMaW5rIGhyZWY9e2AvY2hhbm5lbD9pZD0ke2NsaXAuY2hhbm5lbC5pZH1gfT5cbiAgICAgICAgICAgICAgPGEgY2xhc3NOYW1lPSdjbG9zZSc+Jmx0OyBWb2x2ZXI8L2E+XG4gICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgPC9uYXY+XG5cbiAgICAgICAgICA8cGljdHVyZT5cbiAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kSW1hZ2U6IGB1cmwoJHtcbiAgICAgICAgICAgICAgICAgIGNsaXAudXJscy5pbWFnZSB8fCBjbGlwLmNoYW5uZWwudXJscy5sb2dvX2ltYWdlLm9yaWdpbmFsXG4gICAgICAgICAgICAgICAgfSlgLFxuICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L3BpY3R1cmU+XG5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0ncGxheWVyJz5cbiAgICAgICAgICAgIDxoMz57Y2xpcC50aXRsZX08L2gzPlxuICAgICAgICAgICAgPGg2PntjbGlwLmNoYW5uZWwudGl0bGV9PC9oNj5cbiAgICAgICAgICAgIDxhdWRpbyBjb250cm9scyBhdXRvUGxheT17dHJ1ZX0+XG4gICAgICAgICAgICAgIDxzb3VyY2Ugc3JjPXtjbGlwLnVybHMuaGlnaF9tcDN9IHR5cGU9J2F1ZGlvL21wZWcnIC8+XG4gICAgICAgICAgICA8L2F1ZGlvPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuXG4gICAgICA8c3R5bGUganN4PntgXG4gICAgICAgIG5hdiB7XG4gICAgICAgICAgYmFja2dyb3VuZDogbm9uZTtcbiAgICAgICAgfVxuICAgICAgICBuYXYgYSB7XG4gICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgIHBhZGRpbmc6IDE1cHg7XG4gICAgICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgIH1cbiAgICAgICAgLmNsaXAge1xuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgYmFja2dyb3VuZDogIzg3NTZjYTtcbiAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgIH1cbiAgICAgICAgcGljdHVyZSB7XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAgIGZsZXg6IDEgMTtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgIHdpZHRoOiBhdXRvO1xuICAgICAgICAgIHBhZGRpbmc6IDEwJTtcbiAgICAgICAgfVxuICAgICAgICBwaWN0dXJlIGRpdiB7XG4gICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IDUwJSA1MCU7XG4gICAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xuICAgICAgICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgICAgIH1cbiAgICAgICAgLnBsYXllciB7XG4gICAgICAgICAgcGFkZGluZzogMzBweDtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuMyk7XG4gICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICB9XG4gICAgICAgIGgzIHtcbiAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIH1cbiAgICAgICAgaDYge1xuICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICBtYXJnaW4tdG9wOiAxZW07XG4gICAgICAgIH1cbiAgICAgICAgYXVkaW8ge1xuICAgICAgICAgIG1hcmdpbi10b3A6IDJlbTtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5tb2RhbCB7XG4gICAgICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgICAgIHRvcDogMDtcbiAgICAgICAgICBsZWZ0OiAwO1xuICAgICAgICAgIHJpZ2h0OiAwO1xuICAgICAgICAgIGJvdHRvbTogMDtcbiAgICAgICAgICB6LWluZGV4OiA5OTk5OTtcbiAgICAgICAgfVxuICAgICAgYH08L3N0eWxlPlxuICAgIDwvTGF5b3V0PlxuICApO1xufTtcblxuUG9kY2FzdC5nZXRJbml0aWFsUHJvcHMgPSBhc3luYyAoeyBxdWVyeSB9KSA9PiB7XG4gIGxldCBpZCA9IHF1ZXJ5LmlkO1xuICBsZXQgZmV0Y2hDbGlwID0gYXdhaXQgZmV0Y2goXG4gICAgYGh0dHBzOi8vYXBpLmF1ZGlvYm9vbS5jb20vYXVkaW9fY2xpcHMvJHtpZH0ubXAzYFxuICApO1xuICBsZXQgY2xpcCA9IChhd2FpdCBmZXRjaENsaXAuanNvbigpKS5ib2R5LmF1ZGlvX2NsaXA7XG4gIHJldHVybiB7IGNsaXAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFBvZGNhc3Q7XG4iXX0= */\\n/*@ sourceURL=/home/andres/Projects/podcasts-nextjs/pages/podcast.js */\"));\n};\n\nPodcast.getInitialProps = function _callee(_ref) {\n  var query, id, fetchClip, clip;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          query = _ref.query;\n          id = query.id;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetch(\"https://api.audioboom.com/audio_clips/\".concat(id, \".mp3\")));\n\n        case 4:\n          fetchClip = _context.sent;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(fetchClip.json());\n\n        case 7:\n          clip = _context.sent.body.audio_clip;\n          return _context.abrupt(\"return\", {\n            clip: clip\n          });\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Podcast;","map":{"version":3,"sources":["/home/andres/Projects/podcasts-nextjs/pages/podcast.js"],"names":["Link","Layout","Podcast","props","clip","title","channel","id","backgroundImage","urls","image","logo_image","original","high_mp3","getInitialProps","query","fetch","fetchClip","json","body","audio_clip"],"mappings":";;;;;;;;AAAA,OAAO,kBAAP;AACA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEAC,OAAO,GAAG,iBAACC,KAAD,EAAW;AAAA,MACXC,IADW,GACFD,KADE,CACXC,IADW;AAGnB,SACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAEA,IAAI,CAACC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA,wCAAe,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA,wCAAe,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,wBAAiBD,IAAI,CAACE,OAAL,CAAaC,EAA9B,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA,wCAAa,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADF,CADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,eAAe,gBACbJ,IAAI,CAACK,IAAL,CAAUC,KAAV,IAAmBN,IAAI,CAACE,OAAL,CAAaG,IAAb,CAAkBE,UAAlB,CAA6BC,QADnC;AADV,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,EAiBE;AAAA,wCAAe,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKR,IAAI,CAACC,KAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,IAAI,CAACE,OAAL,CAAaD,KAAlB,CAFF,EAGE;AAAO,IAAA,QAAQ,MAAf;AAAgB,IAAA,QAAQ,EAAE,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,GAAG,EAAED,IAAI,CAACK,IAAL,CAAUI,QAAvB;AAAiC,IAAA,IAAI,EAAC,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHF,CAjBF,CADF,CADF;AAAA;AAAA;AAAA,u9KADF;AA4FD,CA/FD;;AAiGAX,OAAO,CAACY,eAAR,GAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,KAAT,QAASA,KAAT;AACpBR,UAAAA,EADoB,GACfQ,KAAK,CAACR,EADS;AAAA;AAAA,2CAEFS,KAAK,iDACgBT,EADhB,UAFH;;AAAA;AAEpBU,UAAAA,SAFoB;AAAA;AAAA,2CAKNA,SAAS,CAACC,IAAV,EALM;;AAAA;AAKpBd,UAAAA,IALoB,iBAKYe,IALZ,CAKiBC,UALjB;AAAA,2CAMjB;AAAEhB,YAAAA,IAAI,EAAJA;AAAF,WANiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;;AASA,eAAeF,OAAf","sourcesContent":["import 'isomorphic-fetch';\nimport Link from 'next/link';\nimport Layout from '../components/Layout';\n\nPodcast = (props) => {\n  const { clip } = props;\n\n  return (\n    <Layout title={clip.title}>\n      <div className='modal'>\n        <div className='clip'>\n          <nav>\n            <Link href={`/channel?id=${clip.channel.id}`}>\n              <a className='close'>&lt; Volver</a>\n            </Link>\n          </nav>\n\n          <picture>\n            <div\n              style={{\n                backgroundImage: `url(${\n                  clip.urls.image || clip.channel.urls.logo_image.original\n                })`,\n              }}\n            />\n          </picture>\n\n          <div className='player'>\n            <h3>{clip.title}</h3>\n            <h6>{clip.channel.title}</h6>\n            <audio controls autoPlay={true}>\n              <source src={clip.urls.high_mp3} type='audio/mpeg' />\n            </audio>\n          </div>\n        </div>\n      </div>\n\n      <style jsx>{`\n        nav {\n          background: none;\n        }\n        nav a {\n          display: inline-block;\n          padding: 15px;\n          color: white;\n          cursor: pointer;\n          text-decoration: none;\n        }\n        .clip {\n          display: flex;\n          height: 100%;\n          flex-direction: column;\n          background: #8756ca;\n          color: white;\n        }\n        picture {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          flex: 1 1;\n          flex-direction: column;\n          width: auto;\n          padding: 10%;\n        }\n        picture div {\n          width: 100%;\n          height: 100%;\n          background-position: 50% 50%;\n          background-size: contain;\n          background-repeat: no-repeat;\n        }\n        .player {\n          padding: 30px;\n          background: rgba(0, 0, 0, 0.3);\n          text-align: center;\n        }\n        h3 {\n          margin: 0;\n        }\n        h6 {\n          margin: 0;\n          margin-top: 1em;\n        }\n        audio {\n          margin-top: 2em;\n          width: 100%;\n        }\n\n        .modal {\n          position: fixed;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          z-index: 99999;\n        }\n      `}</style>\n    </Layout>\n  );\n};\n\nPodcast.getInitialProps = async ({ query }) => {\n  let id = query.id;\n  let fetchClip = await fetch(\n    `https://api.audioboom.com/audio_clips/${id}.mp3`\n  );\n  let clip = (await fetchClip.json()).body.audio_clip;\n  return { clip };\n};\n\nexport default Podcast;\n"]},"metadata":{},"sourceType":"module"}