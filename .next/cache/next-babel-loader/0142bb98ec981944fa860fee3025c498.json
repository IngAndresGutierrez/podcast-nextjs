{"ast":null,"code":"var _jsxFileName = \"/home/andres/Projects/podcasts-nextjs/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport 'isomorphic-fetch';\nimport Error from 'next/error';\nimport ChannelGrid from '../components/ChannelGrid';\nimport Layout from '../components/Layout';\n\nconst Index = props => {\n  const {\n    channels,\n    statusCode\n  } = props;\n\n  if (statusCode !== 200) {\n    return __jsx(Error, {\n      statusCode: statusCode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return __jsx(Layout, {\n    title: \"Podcasts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, __jsx(ChannelGrid, {\n    channels: channels,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }));\n};\n\nIndex.getInitialProps = async ({\n  res\n}) => {\n  try {\n    let req = await fetch('https://api.audioboom.com/channels/recommended');\n    let {\n      body: channels\n    } = await req.json();\n    return {\n      channels,\n      statusCode: 200\n    };\n  } catch (e) {\n    return {\n      channels: null,\n      statusCode: 500\n    };\n  }\n};\n\nexport default Index;","map":{"version":3,"sources":["/home/andres/Projects/podcasts-nextjs/pages/index.js"],"names":["Error","ChannelGrid","Layout","Index","props","channels","statusCode","getInitialProps","res","req","fetch","body","json","e"],"mappings":";;;AAAA,OAAO,kBAAP;AACA,OAAOA,KAAP,MAAkB,YAAlB;AAEA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACvB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA2BF,KAAjC;;AAEA,MAAIE,UAAU,KAAK,GAAnB,EAAwB;AACtB,WAAO,MAAC,KAAD;AAAO,MAAA,UAAU,EAAEA,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAa,IAAA,QAAQ,EAAED,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAZD;;AAcAF,KAAK,CAACI,eAAN,GAAwB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAmB;AACzC,MAAI;AACF,QAAIC,GAAG,GAAG,MAAMC,KAAK,CAAC,gDAAD,CAArB;AACA,QAAI;AAAEC,MAAAA,IAAI,EAAEN;AAAR,QAAqB,MAAMI,GAAG,CAACG,IAAJ,EAA/B;AACA,WAAO;AAAEP,MAAAA,QAAF;AAAYC,MAAAA,UAAU,EAAE;AAAxB,KAAP;AACD,GAJD,CAIE,OAAOO,CAAP,EAAU;AACV,WAAO;AAAER,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,UAAU,EAAE;AAA9B,KAAP;AACD;AACF,CARD;;AAUA,eAAeH,KAAf","sourcesContent":["import 'isomorphic-fetch';\nimport Error from 'next/error';\n\nimport ChannelGrid from '../components/ChannelGrid';\nimport Layout from '../components/Layout';\n\nconst Index = (props) => {\n  const { channels, statusCode } = props;\n\n  if (statusCode !== 200) {\n    return <Error statusCode={statusCode} />;\n  }\n\n  return (\n    <Layout title='Podcasts'>\n      <ChannelGrid channels={channels} />\n    </Layout>\n  );\n};\n\nIndex.getInitialProps = async ({ res }) => {\n  try {\n    let req = await fetch('https://api.audioboom.com/channels/recommended');\n    let { body: channels } = await req.json();\n    return { channels, statusCode: 200 };\n  } catch (e) {\n    return { channels: null, statusCode: 500 };\n  }\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}