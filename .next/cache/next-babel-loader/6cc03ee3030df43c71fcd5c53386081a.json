{"ast":null,"code":"var _jsxFileName = \"/home/andres/Projects/podcasts-nextjs/pages/channel.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport 'isomorphic-fetch';\nimport Error from 'next/error';\nimport Layout from '../components/Layout';\nimport ChannelGrid from '../components/ChannelGrid';\nimport PodcastList from '../components/PodcastList';\n\nconst Channel = props => {\n  const {\n    channel,\n    audioClips,\n    series,\n    statusCode\n  } = props;\n\n  if (statusCode !== 200) {\n    return __jsx(Error, {\n      statusCode: statusCode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return __jsx(Layout, {\n    title: channel.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    style: {\n      backgroundImage: `url(${channel.urls.banner_image.original})`\n    },\n    className: \"jsx-1404733386\" + \" \" + 'banner',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }), __jsx(\"h1\", {\n    className: \"jsx-1404733386\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, channel.title), series.length > 0 && __jsx(\"div\", {\n    className: \"jsx-1404733386\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    className: \"jsx-1404733386\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, \"Series\"), __jsx(ChannelGrid, {\n    channels: series,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  })), __jsx(\"h2\", {\n    className: \"jsx-1404733386\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Ultimos Podcasts\"), __jsx(PodcastList, {\n    podcasts: audioClips,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), __jsx(_JSXStyle, {\n    id: \"1404733386\",\n    __self: this\n  }, \".banner.jsx-1404733386{width:100%;padding-bottom:25%;background-position:50% 50%;background-size:cover;background-color:#aaa;}h1.jsx-1404733386{font-weight:600;padding:15px;}h2.jsx-1404733386{padding:15px;font-size:1.2em;font-weight:600;margin:0;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2FuZHJlcy9Qcm9qZWN0cy9wb2RjYXN0cy1uZXh0anMvcGFnZXMvY2hhbm5lbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFtQ2tCLEFBR3NCLEFBT0ssQUFJSCxXQVZNLEVBV0gsR0FKSCxhQUNmLEFBSWtCLENBWFksZUFZbkIsU0FDWCxJQVp3QixzQkFDQSxzQkFDeEIiLCJmaWxlIjoiL2hvbWUvYW5kcmVzL1Byb2plY3RzL3BvZGNhc3RzLW5leHRqcy9wYWdlcy9jaGFubmVsLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICdpc29tb3JwaGljLWZldGNoJztcbmltcG9ydCBFcnJvciBmcm9tICduZXh0L2Vycm9yJztcblxuaW1wb3J0IExheW91dCBmcm9tICcuLi9jb21wb25lbnRzL0xheW91dCc7XG5pbXBvcnQgQ2hhbm5lbEdyaWQgZnJvbSAnLi4vY29tcG9uZW50cy9DaGFubmVsR3JpZCc7XG5pbXBvcnQgUG9kY2FzdExpc3QgZnJvbSAnLi4vY29tcG9uZW50cy9Qb2RjYXN0TGlzdCc7XG5cbmNvbnN0IENoYW5uZWwgPSAocHJvcHMpID0+IHtcbiAgY29uc3QgeyBjaGFubmVsLCBhdWRpb0NsaXBzLCBzZXJpZXMsIHN0YXR1c0NvZGUgfSA9IHByb3BzO1xuXG4gIGlmIChzdGF0dXNDb2RlICE9PSAyMDApIHtcbiAgICByZXR1cm4gPEVycm9yIHN0YXR1c0NvZGU9e3N0YXR1c0NvZGV9IC8+O1xuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8TGF5b3V0IHRpdGxlPXtjaGFubmVsLnRpdGxlfT5cbiAgICAgIDxkaXZcbiAgICAgICAgY2xhc3NOYW1lPSdiYW5uZXInXG4gICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgYmFja2dyb3VuZEltYWdlOiBgdXJsKCR7Y2hhbm5lbC51cmxzLmJhbm5lcl9pbWFnZS5vcmlnaW5hbH0pYCxcbiAgICAgICAgfX1cbiAgICAgIC8+XG5cbiAgICAgIDxoMT57Y2hhbm5lbC50aXRsZX08L2gxPlxuXG4gICAgICB7c2VyaWVzLmxlbmd0aCA+IDAgJiYgKFxuICAgICAgICA8ZGl2PlxuICAgICAgICAgIDxoMj5TZXJpZXM8L2gyPlxuICAgICAgICAgIDxDaGFubmVsR3JpZCBjaGFubmVscz17c2VyaWVzfSAvPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICl9XG5cbiAgICAgIDxoMj5VbHRpbW9zIFBvZGNhc3RzPC9oMj5cbiAgICAgIDxQb2RjYXN0TGlzdCBwb2RjYXN0cz17YXVkaW9DbGlwc30gLz5cblxuICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAuYmFubmVyIHtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogMjUlO1xuICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IDUwJSA1MCU7XG4gICAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYWFhO1xuICAgICAgICB9XG4gICAgICAgIGgxIHtcbiAgICAgICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgICAgIHBhZGRpbmc6IDE1cHg7XG4gICAgICAgIH1cbiAgICAgICAgaDIge1xuICAgICAgICAgIHBhZGRpbmc6IDE1cHg7XG4gICAgICAgICAgZm9udC1zaXplOiAxLjJlbTtcbiAgICAgICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgfVxuICAgICAgYH08L3N0eWxlPlxuICAgIDwvTGF5b3V0PlxuICApO1xufTtcblxuQ2hhbm5lbC5nZXRJbml0aWFsUHJvcHMgPSBhc3luYyAoeyBxdWVyeSB9KSA9PiB7XG4gIGxldCBpZENoYW5uZWwgPSBxdWVyeS5pZDtcblxuICB0cnkge1xuICAgIGxldCBbcmVxQ2hhbm5lbCwgcmVxU2VyaWVzLCByZXFBdWRpb3NdID0gYXdhaXQgUHJvbWlzZS5hbGwoW1xuICAgICAgZmV0Y2goYGh0dHBzOi8vYXBpLmF1ZGlvYm9vbS5jb20vY2hhbm5lbHMvJHtpZENoYW5uZWx9YCksXG4gICAgICBmZXRjaChgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2lkQ2hhbm5lbH0vY2hpbGRfY2hhbm5lbHNgKSxcbiAgICAgIGZldGNoKGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7aWRDaGFubmVsfS9hdWRpb19jbGlwc2ApLFxuICAgIF0pO1xuXG4gICAgbGV0IGRhdGFDaGFubmVsID0gYXdhaXQgcmVxQ2hhbm5lbC5qc29uKCk7XG4gICAgbGV0IGNoYW5uZWwgPSBkYXRhQ2hhbm5lbC5ib2R5LmNoYW5uZWw7XG5cbiAgICBsZXQgZGF0YUF1ZGlvcyA9IGF3YWl0IHJlcUF1ZGlvcy5qc29uKCk7XG4gICAgbGV0IGF1ZGlvQ2xpcHMgPSBkYXRhQXVkaW9zLmJvZHkuYXVkaW9fY2xpcHM7XG5cbiAgICBsZXQgZGF0YVNlcmllcyA9IGF3YWl0IHJlcVNlcmllcy5qc29uKCk7XG4gICAgbGV0IHNlcmllcyA9IGRhdGFTZXJpZXMuYm9keS5jaGFubmVscztcblxuICAgIHJldHVybiB7IGNoYW5uZWwsIGF1ZGlvQ2xpcHMsIHNlcmllcywgc3RhdHVzQ29kZTogMjAwIH07XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmV0dXJuIHsgY2hhbm5lbDogbnVsbCwgYXVkaW9DbGlwczogbnVsbCwgc2VyaWVzOiBudWxsLCBzdGF0dXNDb2RlOiA1MDMgfTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgQ2hhbm5lbDtcbiJdfQ== */\\n/*@ sourceURL=/home/andres/Projects/podcasts-nextjs/pages/channel.js */\"));\n};\n\nChannel.getInitialProps = async ({\n  query\n}) => {\n  let idChannel = query.id;\n\n  try {\n    let [reqChannel, reqSeries, reqAudios] = await Promise.all([fetch(`https://api.audioboom.com/channels/${idChannel}`), fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`), fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`)]);\n    let dataChannel = await reqChannel.json();\n    let channel = dataChannel.body.channel;\n    let dataAudios = await reqAudios.json();\n    let audioClips = dataAudios.body.audio_clips;\n    let dataSeries = await reqSeries.json();\n    let series = dataSeries.body.channels;\n    return {\n      channel,\n      audioClips,\n      series,\n      statusCode: 200\n    };\n  } catch (error) {\n    return {\n      channel: null,\n      audioClips: null,\n      series: null,\n      statusCode: 503\n    };\n  }\n};\n\nexport default Channel;","map":{"version":3,"sources":["/home/andres/Projects/podcasts-nextjs/pages/channel.js"],"names":["Error","Layout","ChannelGrid","PodcastList","Channel","props","channel","audioClips","series","statusCode","title","backgroundImage","urls","banner_image","original","length","getInitialProps","query","idChannel","id","reqChannel","reqSeries","reqAudios","Promise","all","fetch","dataChannel","json","body","dataAudios","audio_clips","dataSeries","channels","error"],"mappings":";;;;AAAA,OAAO,kBAAP;AACA,OAAOA,KAAP,MAAkB,YAAlB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,UAAX;AAAuBC,IAAAA,MAAvB;AAA+BC,IAAAA;AAA/B,MAA8CJ,KAApD;;AAEA,MAAII,UAAU,KAAK,GAAnB,EAAwB;AACtB,WAAO,MAAC,KAAD;AAAO,MAAA,UAAU,EAAEA,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAEH,OAAO,CAACI,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAEE,IAAA,KAAK,EAAE;AACLC,MAAAA,eAAe,EAAG,OAAML,OAAO,CAACM,IAAR,CAAaC,YAAb,CAA0BC,QAAS;AADtD,KAFT;AAAA,wCACY,QADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKR,OAAO,CAACI,KAAb,CARF,EAUGF,MAAM,CAACO,MAAP,GAAgB,CAAhB,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,MAAC,WAAD;AAAa,IAAA,QAAQ,EAAEP,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAXJ,EAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAjBF,EAkBE,MAAC,WAAD;AAAa,IAAA,QAAQ,EAAED,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF;AAAA;AAAA;AAAA,8nHADF;AA0CD,CAjDD;;AAmDAH,OAAO,CAACY,eAAR,GAA0B,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAqB;AAC7C,MAAIC,SAAS,GAAGD,KAAK,CAACE,EAAtB;;AAEA,MAAI;AACF,QAAI,CAACC,UAAD,EAAaC,SAAb,EAAwBC,SAAxB,IAAqC,MAAMC,OAAO,CAACC,GAAR,CAAY,CACzDC,KAAK,CAAE,sCAAqCP,SAAU,EAAjD,CADoD,EAEzDO,KAAK,CAAE,sCAAqCP,SAAU,iBAAjD,CAFoD,EAGzDO,KAAK,CAAE,sCAAqCP,SAAU,cAAjD,CAHoD,CAAZ,CAA/C;AAMA,QAAIQ,WAAW,GAAG,MAAMN,UAAU,CAACO,IAAX,EAAxB;AACA,QAAIrB,OAAO,GAAGoB,WAAW,CAACE,IAAZ,CAAiBtB,OAA/B;AAEA,QAAIuB,UAAU,GAAG,MAAMP,SAAS,CAACK,IAAV,EAAvB;AACA,QAAIpB,UAAU,GAAGsB,UAAU,CAACD,IAAX,CAAgBE,WAAjC;AAEA,QAAIC,UAAU,GAAG,MAAMV,SAAS,CAACM,IAAV,EAAvB;AACA,QAAInB,MAAM,GAAGuB,UAAU,CAACH,IAAX,CAAgBI,QAA7B;AAEA,WAAO;AAAE1B,MAAAA,OAAF;AAAWC,MAAAA,UAAX;AAAuBC,MAAAA,MAAvB;AAA+BC,MAAAA,UAAU,EAAE;AAA3C,KAAP;AACD,GAjBD,CAiBE,OAAOwB,KAAP,EAAc;AACd,WAAO;AAAE3B,MAAAA,OAAO,EAAE,IAAX;AAAiBC,MAAAA,UAAU,EAAE,IAA7B;AAAmCC,MAAAA,MAAM,EAAE,IAA3C;AAAiDC,MAAAA,UAAU,EAAE;AAA7D,KAAP;AACD;AACF,CAvBD;;AAyBA,eAAeL,OAAf","sourcesContent":["import 'isomorphic-fetch';\nimport Error from 'next/error';\n\nimport Layout from '../components/Layout';\nimport ChannelGrid from '../components/ChannelGrid';\nimport PodcastList from '../components/PodcastList';\n\nconst Channel = (props) => {\n  const { channel, audioClips, series, statusCode } = props;\n\n  if (statusCode !== 200) {\n    return <Error statusCode={statusCode} />;\n  }\n\n  return (\n    <Layout title={channel.title}>\n      <div\n        className='banner'\n        style={{\n          backgroundImage: `url(${channel.urls.banner_image.original})`,\n        }}\n      />\n\n      <h1>{channel.title}</h1>\n\n      {series.length > 0 && (\n        <div>\n          <h2>Series</h2>\n          <ChannelGrid channels={series} />\n        </div>\n      )}\n\n      <h2>Ultimos Podcasts</h2>\n      <PodcastList podcasts={audioClips} />\n\n      <style jsx>{`\n        .banner {\n          width: 100%;\n          padding-bottom: 25%;\n          background-position: 50% 50%;\n          background-size: cover;\n          background-color: #aaa;\n        }\n        h1 {\n          font-weight: 600;\n          padding: 15px;\n        }\n        h2 {\n          padding: 15px;\n          font-size: 1.2em;\n          font-weight: 600;\n          margin: 0;\n        }\n      `}</style>\n    </Layout>\n  );\n};\n\nChannel.getInitialProps = async ({ query }) => {\n  let idChannel = query.id;\n\n  try {\n    let [reqChannel, reqSeries, reqAudios] = await Promise.all([\n      fetch(`https://api.audioboom.com/channels/${idChannel}`),\n      fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`),\n      fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`),\n    ]);\n\n    let dataChannel = await reqChannel.json();\n    let channel = dataChannel.body.channel;\n\n    let dataAudios = await reqAudios.json();\n    let audioClips = dataAudios.body.audio_clips;\n\n    let dataSeries = await reqSeries.json();\n    let series = dataSeries.body.channels;\n\n    return { channel, audioClips, series, statusCode: 200 };\n  } catch (error) {\n    return { channel: null, audioClips: null, series: null, statusCode: 503 };\n  }\n};\n\nexport default Channel;\n"]},"metadata":{},"sourceType":"module"}