{"ast":null,"code":"var _jsxFileName = \"/home/andres/Projects/podcasts-nextjs/pages/channel.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport 'isomorphic-fetch';\n\nconst Channel = props => {\n  const {\n    channel\n  } = props;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, __jsx(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, \"Podcasts\"), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, channel.title));\n};\n\n__jsx(\"style\", {\n  jsx: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 1\n  }\n}, `\n  header {\n    color: #fff;\n    background: #8756ca;\n    padding: 15px;\n    text-align: center;\n  }\n  .channels {\n    display: grid;\n    grid-gap: 15px;\n    padding: 15px;\n    grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n  }\n  a.channel {\n    display: block;\n    margin-bottom: 0.5em;\n    color: #333;\n    text-decoration: none;\n  }\n  .channel img {\n    border-radius: 3px;\n    box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.15);\n    width: 100%;\n  }\n  h1 {\n    font-weight: 600;\n    padding: 15px;\n  }\n  h2 {\n    padding: 5px;\n    font-size: 0.9em;\n    font-weight: 600;\n    margin: 0;\n    text-align: center;\n  }\n`);\n\nChannel.getInitialProps = async ({\n  query\n}) => {\n  let idChannel = query.id;\n  let [reqChannel, reqSeries, reqAudios] = await Promise.all([fetch(`https://api.audioboom.com/channels/${idChannel}`), fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`), fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`)]);\n  let dataChannel = await reqChannel.json();\n  let channel = dataChannel.body.channel;\n  let dataAudios = await reqAudios.json();\n  let audioClips = dataAudios.body.audio_clips;\n  let dataSeries = await reqSeries.json();\n  let series = dataSeries.body.channels;\n  return {\n    channel,\n    audioClips,\n    series\n  };\n};\n\nexport default Channel;","map":{"version":3,"sources":["/home/andres/Projects/podcasts-nextjs/pages/channel.js"],"names":["Channel","props","channel","title","getInitialProps","query","idChannel","id","reqChannel","reqSeries","reqAudios","Promise","all","fetch","dataChannel","json","body","dataAudios","audioClips","audio_clips","dataSeries","series","channels"],"mappings":";;;AAAA,OAAO,kBAAP;;AAEA,MAAMA,OAAO,GAAIC,KAAD,IAAW;AACzB,QAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,OAAO,CAACC,KAAb,CAFF,CADF;AAMD,CARD;;AAUA;AAAO,EAAA,GAAG,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAb;;AAqCAH,OAAO,CAACI,eAAR,GAA0B,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAqB;AAC7C,MAAIC,SAAS,GAAGD,KAAK,CAACE,EAAtB;AACA,MAAI,CAACC,UAAD,EAAaC,SAAb,EAAwBC,SAAxB,IAAqC,MAAMC,OAAO,CAACC,GAAR,CAAY,CACzDC,KAAK,CAAE,sCAAqCP,SAAU,EAAjD,CADoD,EAEzDO,KAAK,CAAE,sCAAqCP,SAAU,iBAAjD,CAFoD,EAGzDO,KAAK,CAAE,sCAAqCP,SAAU,cAAjD,CAHoD,CAAZ,CAA/C;AAMA,MAAIQ,WAAW,GAAG,MAAMN,UAAU,CAACO,IAAX,EAAxB;AACA,MAAIb,OAAO,GAAGY,WAAW,CAACE,IAAZ,CAAiBd,OAA/B;AAEA,MAAIe,UAAU,GAAG,MAAMP,SAAS,CAACK,IAAV,EAAvB;AACA,MAAIG,UAAU,GAAGD,UAAU,CAACD,IAAX,CAAgBG,WAAjC;AAEA,MAAIC,UAAU,GAAG,MAAMX,SAAS,CAACM,IAAV,EAAvB;AACA,MAAIM,MAAM,GAAGD,UAAU,CAACJ,IAAX,CAAgBM,QAA7B;AAEA,SAAO;AAAEpB,IAAAA,OAAF;AAAWgB,IAAAA,UAAX;AAAuBG,IAAAA;AAAvB,GAAP;AACD,CAlBD;;AAoBA,eAAerB,OAAf","sourcesContent":["import 'isomorphic-fetch';\n\nconst Channel = (props) => {\n  const { channel } = props;\n  return (\n    <div>\n      <header>Podcasts</header>\n      <h1>{channel.title}</h1>\n    </div>\n  );\n};\n\n<style jsx>{`\n  header {\n    color: #fff;\n    background: #8756ca;\n    padding: 15px;\n    text-align: center;\n  }\n  .channels {\n    display: grid;\n    grid-gap: 15px;\n    padding: 15px;\n    grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n  }\n  a.channel {\n    display: block;\n    margin-bottom: 0.5em;\n    color: #333;\n    text-decoration: none;\n  }\n  .channel img {\n    border-radius: 3px;\n    box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.15);\n    width: 100%;\n  }\n  h1 {\n    font-weight: 600;\n    padding: 15px;\n  }\n  h2 {\n    padding: 5px;\n    font-size: 0.9em;\n    font-weight: 600;\n    margin: 0;\n    text-align: center;\n  }\n`}</style>;\n\nChannel.getInitialProps = async ({ query }) => {\n  let idChannel = query.id;\n  let [reqChannel, reqSeries, reqAudios] = await Promise.all([\n    fetch(`https://api.audioboom.com/channels/${idChannel}`),\n    fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`),\n    fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`),\n  ]);\n\n  let dataChannel = await reqChannel.json();\n  let channel = dataChannel.body.channel;\n\n  let dataAudios = await reqAudios.json();\n  let audioClips = dataAudios.body.audio_clips;\n\n  let dataSeries = await reqSeries.json();\n  let series = dataSeries.body.channels;\n\n  return { channel, audioClips, series };\n};\n\nexport default Channel;\n"]},"metadata":{},"sourceType":"module"}