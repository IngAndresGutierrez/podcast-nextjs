{"ast":null,"code":"var _jsxFileName = \"/home/andres/Projects/podcasts-nextjs/pages/channel.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\n\nconst Channel = props => {\n  const {\n    channel\n  } = props;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, __jsx(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, \"Podcasts\"), __jsx(\"div\", {\n    className: \"banner\",\n    style: {\n      backgroundImage: `url(${channel.urls.banner_image.original})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, channel.title), series.length > 0 && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, \"Series\"), __jsx(\"div\", {\n    className: \"channels\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, series.map(serie => __jsx(Link, {\n    href: `/channel?id=${serie.id}`,\n    prefetch: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 15\n    }\n  }, __jsx(\"a\", {\n    className: \"channel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, __jsx(\"img\", {\n    src: serie.urls.logo_image.original,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 19\n    }\n  }), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 19\n    }\n  }, serie.title)))))), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Ultimos Podcasts\"), audioClips.map(clip => __jsx(\"div\", {\n    className: \"podcast\",\n    key: clip.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, clip.title)));\n};\n\n__jsx(\"style\", {\n  jsx: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 1\n  }\n}, `\n  header {\n    color: #fff;\n    background: #8756ca;\n    padding: 15px;\n    text-align: center;\n  }\n  .channels {\n    display: grid;\n    grid-gap: 15px;\n    padding: 15px;\n    grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n  }\n  a.channel {\n    display: block;\n    margin-bottom: 0.5em;\n    color: #333;\n    text-decoration: none;\n  }\n  .channel img {\n    border-radius: 3px;\n    box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.15);\n    width: 100%;\n  }\n  h1 {\n    font-weight: 600;\n    padding: 15px;\n  }\n  h2 {\n    padding: 5px;\n    font-size: 0.9em;\n    font-weight: 600;\n    margin: 0;\n    text-align: center;\n  }\n`);\n\nChannel.getInitialProps = async ({\n  query\n}) => {\n  let idChannel = query.id;\n  let [reqChannel, reqSeries, reqAudios] = await Promise.all([fetch(`https://api.audioboom.com/channels/${idChannel}`), fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`), fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`)]);\n  let dataChannel = await reqChannel.json();\n  let channel = dataChannel.body.channel;\n  let dataAudios = await reqAudios.json();\n  let audioClips = dataAudios.body.audio_clips;\n  let dataSeries = await reqSeries.json();\n  let series = dataSeries.body.channels;\n  return {\n    channel,\n    audioClips,\n    series\n  };\n};\n\nexport default Channel;","map":{"version":3,"sources":["/home/andres/Projects/podcasts-nextjs/pages/channel.js"],"names":["Link","Channel","props","channel","backgroundImage","urls","banner_image","original","title","series","length","map","serie","id","logo_image","audioClips","clip","getInitialProps","query","idChannel","reqChannel","reqSeries","reqAudios","Promise","all","fetch","dataChannel","json","body","dataAudios","audio_clips","dataSeries","channels"],"mappings":"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","sourcesContent":["import Link from 'next/link';\n\nconst Channel = (props) => {\n  const { channel } = props;\n  return (\n    <div>\n      <header>Podcasts</header>\n\n      <div\n        className='banner'\n        style={{\n          backgroundImage: `url(${channel.urls.banner_image.original})`,\n        }}\n      />\n\n      <h1>{channel.title}</h1>\n\n      {series.length > 0 && (\n        <div>\n          <h2>Series</h2>\n          <div className='channels'>\n            {series.map((serie) => (\n              <Link href={`/channel?id=${serie.id}`} prefetch>\n                <a className='channel'>\n                  <img src={serie.urls.logo_image.original} alt='' />\n                  <h2>{serie.title}</h2>\n                </a>\n              </Link>\n            ))}\n          </div>\n        </div>\n      )}\n\n      <h2>Ultimos Podcasts</h2>\n      {audioClips.map((clip) => (\n        <div className='podcast' key={clip.id}>\n          {clip.title}\n        </div>\n      ))}\n    </div>\n  );\n};\n\n<style jsx>{`\n  header {\n    color: #fff;\n    background: #8756ca;\n    padding: 15px;\n    text-align: center;\n  }\n  .channels {\n    display: grid;\n    grid-gap: 15px;\n    padding: 15px;\n    grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n  }\n  a.channel {\n    display: block;\n    margin-bottom: 0.5em;\n    color: #333;\n    text-decoration: none;\n  }\n  .channel img {\n    border-radius: 3px;\n    box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.15);\n    width: 100%;\n  }\n  h1 {\n    font-weight: 600;\n    padding: 15px;\n  }\n  h2 {\n    padding: 5px;\n    font-size: 0.9em;\n    font-weight: 600;\n    margin: 0;\n    text-align: center;\n  }\n`}</style>;\n\nChannel.getInitialProps = async ({ query }) => {\n  let idChannel = query.id;\n  let [reqChannel, reqSeries, reqAudios] = await Promise.all([\n    fetch(`https://api.audioboom.com/channels/${idChannel}`),\n    fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`),\n    fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`),\n  ]);\n\n  let dataChannel = await reqChannel.json();\n  let channel = dataChannel.body.channel;\n\n  let dataAudios = await reqAudios.json();\n  let audioClips = dataAudios.body.audio_clips;\n\n  let dataSeries = await reqSeries.json();\n  let series = dataSeries.body.channels;\n\n  return { channel, audioClips, series };\n};\n\nexport default Channel;\n"]},"metadata":{},"sourceType":"module"}