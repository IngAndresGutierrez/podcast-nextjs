{"version":3,"file":"static/webpack/static/development/pages/channel.js.b2257f8b608fb3b6eaae.hot-update.js","sources":["webpack:///./pages/channel.js"],"sourcesContent":["import Link from 'next/link';\n\nconst Channel = (props) => {\n  const { channel, audioClips, series } = props;\n\n  return (\n    <div>\n      <header>Podcasts</header>\n      <div\n        className='banner'\n        style={{\n          backgroundImage: `url(${channel.urls.banner_image.original})`,\n        }}\n      />\n      <h1>{channel.title}</h1>\n      {series.length > 0 && (\n        <div>\n          <h2>Series</h2>\n          <div className='channels'>\n            {series.map((serie) => (\n              <Link href={`/channel?id=${serie.id}`}>\n                <a className='channel'>\n                  <img src={serie.urls.logo_image.original} alt='' />\n                  <h2>{serie.title}</h2>\n                </a>\n              </Link>\n            ))}\n          </div>\n        </div>\n      )}\n      <h2>Ultimos Podcasts</h2>\n      {audioClips.map((clip) => (\n        <Link href={`/podcast?id=${clip.id}`} key={clip.id}>\n          <a className='podcast'>\n            <h3>{clip.title}</h3>\n            <div className='meta'>{Math.ceil(clip.duration / 60)} minutes</div>\n          </a>\n        </Link>\n      ))}\n      <style jsx>{`\n        header {\n          color: #fff;\n          background: #8756ca;\n          padding: 15px;\n          text-align: center;\n        }\n        .channels {\n          display: grid;\n          grid-gap: 15px;\n          padding: 15px;\n          grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n        }\n        a.channel {\n          display: block;\n          margin-bottom: 0.5em;\n          color: #333;\n          text-decoration: none;\n        }\n        .channel img {\n          border-radius: 3px;\n          box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.15);\n          width: 100%;\n        }\n        h2 {\n          padding: 5px;\n          font-size: 0.9em;\n          font-weight: 600;\n          margin: 0;\n          text-align: center;\n        }\n      `}</style>\n      <style jsx global>{`\n        body {\n          margin: 0;\n          font-family: system-ui;\n          background: white;\n        }\n      `}</style>\n      ;\n    </div>\n  );\n};\n\nChannel.getInitialProps = async ({ query }) => {\n  let idChannel = query.id;\n  let [reqChannel, reqSeries, reqAudios] = await Promise.all([\n    fetch(`https://api.audioboom.com/channels/${idChannel}`),\n    fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`),\n    fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`),\n  ]);\n\n  let dataChannel = await reqChannel.json();\n  let channel = dataChannel.body.channel;\n\n  let dataAudios = await reqAudios.json();\n  let audioClips = dataAudios.body.audio_clips;\n\n  let dataSeries = await reqSeries.json();\n  let series = dataSeries.body.channels;\n\n  return { channel, audioClips, series };\n};\n\nexport default Channel;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AADA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2EA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAEA;AAAA;AAAA;AAFA;AAAA;AACA;AADA;AAQA;AACA;AATA;AAAA;AACA;AADA;AAWA;AACA;AAZA;AAAA;AACA;AADA;AAcA;AACA;AAfA;AAiBA;AAAA;AAAA;AAAA;AACA;AAlBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAmBA;;;;A","sourceRoot":""}